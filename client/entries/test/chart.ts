import './../../utilities/imports';

import { Chart, registerables } from 'chart.js';

Chart.register(...registerables);

import { generateTrace } from '../../../shared/dummy-data';
import { TraceArray, Trace } from '../../../shared/submodules/tatorscout-calculations/trace';
import { months } from '../../../shared/clock';


// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
/*
  Josh, your task is to utitlize the const "actions" on line 30 and the 
  chart generated by "new Chart" on line 47 to answer the question below:

  Question: How many shots on average does a bot make per match?

  You'll need to assess what the data structure for 'traces' is, and how to pull data from it.
  You already have the actions (everything the robot did) during the match filtered into the actions constant,
  so you'll just need to logic out how to answer that question using that data! If you're confused by something,
  or don't know what something looks like, the best thing to do is to use console.log() to view the thing you want to see.
  Be sure to open the console in the browser with f12.
*/
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


const traces: TraceArray[] = new Array(10).fill(0).map(generateTrace);

const actions = {
  // shots into speaker
  spk: traces.map(t => t.filter(Trace.filterAction('spk'))),
  // placements into the amp
  amp: traces.map(t => t.filter(Trace.filterAction('amp'))),
  // all climbs
  clb: traces.map(t => t.filter(Trace.filterAction('clb'))),
  // placements into the trap
  trp: traces.map(t => t.filter(Trace.filterAction('trp')))
}

const canvas = document.createElement('canvas');
const ctx = canvas.getContext('2d');
if (!ctx) throw new Error('Could not get canvas context');

document.body.append(canvas);

new Chart(ctx, {
    type: 'bar',
    data: {
        labels: months.slice(0, 7),
        datasets: [{
          label: 'My First Dataset',
          data: [65, 59, 80, 81, 56, 55, 40],
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(201, 203, 207, 0.2)'
          ],
          borderColor: [
            'rgb(255, 99, 132)',
            'rgb(255, 159, 64)',
            'rgb(255, 205, 86)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
            'rgb(153, 102, 255)',
            'rgb(201, 203, 207)'
          ],
          borderWidth: 1
        }]
      },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    },
  });